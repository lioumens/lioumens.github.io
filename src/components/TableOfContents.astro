---
export interface Props {
    headings: {
        depth: number
        text: string
        slug: string
    }[]
}
const {headings, class:className} = Astro.props

import TableOfContentsItem from "./TableOfContentsItem.astro"

// implementation from https://kld.dev/building-table-of-contents/
function buildToc(headings) {
  const toc = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}

const toc = buildToc(headings);

---

<nav aria-label="secondary" class={className}> 
    <ul> 
        {toc.map(heading => 
          <TableOfContentsItem heading={heading} toplevel={true}/>)}
    </ul>
    
</nav>


<style lang="scss">
ul {
    list-style: none;
    padding-left: 0;
    margin-top: 0;
    margin-bottom: 0;
}
</style>
